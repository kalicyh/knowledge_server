name: Cleanup Docker Images

on:
  schedule:
    - cron: '0 0 * * 0' # 每周一次
  workflow_dispatch: # 手动触发

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: List and delete untagged images
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
          PACKAGE_NAME: knowledge_backend # 这里填入你的包名
        run: |
          query='{
            "query": "query($owner: String!, $repo: String!, $package_name: String!) { repository(owner: $owner, name: $repo) { package(name: $package_name) { versions(first: 100) { nodes { id version tags(first: 10) { nodes { name } } } } } } }",
            "variables": {
              "owner": "'"${OWNER}"'",
              "repo": "'"${REPO}"'",
              "package_name": "'"${PACKAGE_NAME}"'"
            }
          }'

          echo "Running query:"
          echo "$query"

          result=$(curl -s -X POST -H "Authorization: bearer $GITHUB_TOKEN" -H "Content-Type: application/json" --data "$query" https://api.github.com/graphql)

          echo "Query result:"
          echo "$result"

          ids=$(echo "$result" | jq -r '.data.repository.package.versions.nodes[] | select(.tags.nodes | length == 0) | .id')

          if [ -z "$ids" ]; then
            echo "No untagged images found."
          else
            echo "$ids" | while read id; do
              echo "Deleting image with ID: $id"
              curl -s -X DELETE -H "Authorization: bearer $GITHUB_TOKEN" -H "Content-Type: application/json" "https://api.github.com/user/packages/docker/${PACKAGE_NAME}/versions/$id"
            done
          fi
